@using HTSV.FE.Models.Common
@using HTSV.FE.Models.TaiChinh
@model PaginatedList<TaiChinhViewModel>
@{
    ViewData["Title"] = "Quản lý tài chính";
    string Admin = Context.Session.GetString("Role") == "Admin" ? "Admin" : "Member";
    if (User.IsInRole(Admin))
    {
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    var isAdmin = User.IsInRole("Admin");
    var isCanBo = User.IsInRole("CanBo");
    var canManage = isAdmin || isCanBo;
}

<div class="p-4 bg-white block sm:flex items-center justify-between border-b border-gray-200 lg:mt-1.5">
    <div class="mb-1 w-full">
        <div class="mb-4">
            <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl">Danh sách giao dịch tài chính</h1>
        </div>
        <div class="sm:flex">
            <div class="flex items-center gap-2">
                @if (canManage)
                {
                    <button type="button" onclick="openCreateModal()" class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary hover:bg-primary/90">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z"/>
                        </svg>
                        Thêm giao dịch
                    </button>
                }
            </div>
            <div class="flex items-center ml-auto space-x-2 sm:space-x-3">
                <form method="get" class="flex gap-2" id="searchForm">
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"/>
                            </svg>
                        </div>
                        <input type="text" name="searchTerm" value="@Context.Request.Query["searchTerm"]"
                               class="block p-2 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50 focus:ring-primary focus:border-primary"
                               placeholder="Tìm kiếm giao dịch">
                        <input type="hidden" name="page" value="1" />
                        <input type="hidden" name="pageSize" value="@Model.PageSize" />
                    </div>
                    <button type="submit" class="text-white bg-primary hover:bg-primary/90 focus:ring-4 focus:ring-primary/50 font-medium rounded-lg text-sm px-5 py-2.5">
                        Tìm kiếm
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Thống kê section -->
@if (canManage)
{
    <div class="grid grid-cols-1 gap-4 p-4 lg:grid-cols-3">
        <div class="flex items-center h-24 rounded bg-gray-50 dark:bg-gray-800">
            <div class="flex-1 text-center">
                <h3 class="text-base font-normal text-gray-500 dark:text-gray-400">Tổng thu</h3>
                <div class="flex items-center justify-center">
                    <h5 id="tong-thu" class="text-2xl font-bold text-green-500">0</h5>
                </div>
            </div>
        </div>
        <div class="flex items-center h-24 rounded bg-gray-50 dark:bg-gray-800">
            <div class="flex-1 text-center">
                <h3 class="text-base font-normal text-gray-500 dark:text-gray-400">Tổng chi</h3>
                <div class="flex items-center justify-center">
                    <h5 id="tong-chi" class="text-2xl font-bold text-red-500">0</h5>
                </div>
            </div>
        </div>
        <div class="flex items-center h-24 rounded bg-gray-50 dark:bg-gray-800">
            <div class="flex-1 text-center">
                <h3 class="text-base font-normal text-gray-500 dark:text-gray-400">Số dư</h3>
                <div class="flex items-center justify-center">
                    <h5 id="so-du" class="text-2xl font-bold text-blue-500">0</h5>
                </div>
            </div>
        </div>
    </div>
}

<div class="flex flex-col">
    <div class="overflow-x-auto">
        <div class="inline-block min-w-full align-middle">
            <div class="overflow-hidden shadow">
                <table class="min-w-full divide-y divide-gray-200 table-fixed">
                    <thead class="bg-gray-100">
                        <tr>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">STT</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Loại</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Số tiền</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Ngày thực hiện</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Người thực hiện</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Người đóng tiền</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Hoạt động</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Mô tả</th>
                            <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Ghi chú</th>
                            @if (canManage)
                            {
                                <th scope="col" class="p-4 text-xs font-medium text-left text-gray-500 uppercase">Thao tác</th>
                            }
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @{
                            var stt = (Model.PageIndex - 1) * Model.PageSize;
                        }
                        @foreach (var item in Model.Items)
                        {
                            stt++;
                            <tr class="hover:bg-gray-100">
                                <td class="p-4 text-base font-medium text-gray-900">@stt</td>
                                <td class="p-4 text-base font-medium @(item.LoaiGiaoDich == 1 ? "text-green-600" : "text-red-600")">
                                    @(item.LoaiGiaoDich == 1 ? "Thu" : "Chi")
                                </td>
                                <td class="p-4 text-base font-medium whitespace-nowrap @(item.LoaiGiaoDich == 1 ? "text-green-600" : "text-red-600")">
                                    @item.SoTien.ToString("N0") đ
                                </td>
                                <td class="p-4 text-base font-medium text-gray-900">@item.NgayThucHien.ToString("dd/MM/yyyy")</td>
                                <td class="p-4 text-base font-medium text-gray-900">@item.TenNguoiThucHien</td>
                                <td class="p-4 text-base font-medium text-gray-900">@item.TenNguoiDongTien</td>
                                <td class="p-4 text-base font-medium text-gray-900">@item.TenHoatDong</td>
                                <td class="p-4 text-base font-medium text-gray-900">@item.MoTa</td>
                                <td class="p-4 text-base font-medium text-gray-900">@item.GhiChu</td>
                                @if (canManage)
                                {
                                    <td class="p-4 space-x-2 whitespace-nowrap">
                                        <button type="button" 
                                                onclick="openEditModal(@item.Id, @item.LoaiGiaoDich, @item.SoTien, '@item.NgayThucHien.ToString("yyyy-MM-dd")', @item.NguoiDongTienId, @item.HoatDongId, '@item.MoTa', '@item.GhiChu')" 
                                                class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary hover:bg-primary/90">
                                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z"/>
                                                <path fill-rule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" clip-rule="evenodd"/>
                                            </svg>
                                            Sửa
                                        </button>
                                        <button type="button" onclick="deleteTaiChinh(@item.Id)" 
                                                class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-800">
                                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"/>
                                            </svg>
                                            Xóa
                                        </button>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@if (Model.TotalPages > 1)
{
    <div class="sticky bottom-0 right-0 items-center w-full p-4 bg-white border-t border-gray-200 sm:flex sm:justify-between">
        <div class="flex items-center mb-4 sm:mb-0">
            <a href="@Url.Action("Index", new { page = Model.PageIndex - 1, pageSize = Model.PageSize, searchTerm = Context.Request.Query["searchTerm"] })"
               class="@(Model.HasPreviousPage ? "" : "pointer-events-none opacity-50") inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"/>
                </svg>
            </a>
            <span class="text-sm font-normal text-gray-500">
                Hiển thị <span class="font-semibold text-gray-900">@(((Model.PageIndex - 1) * Model.PageSize) + 1)-@(((Model.PageIndex - 1) * Model.PageSize) + Model.Items.Count)</span>
                trong <span class="font-semibold text-gray-900">@Model.TotalCount</span>
            </span>
            <a href="@Url.Action("Index", new { page = Model.PageIndex + 1, pageSize = Model.PageSize, searchTerm = Context.Request.Query["searchTerm"] })"
               class="@(Model.HasNextPage ? "" : "pointer-events-none opacity-50") inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
                </svg>
            </a>
        </div>
        <div class="flex items-center space-x-3">
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <a href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize, searchTerm = Context.Request.Query["searchTerm"] })"
                   class="inline-flex items-center justify-center w-8 h-8 text-sm font-semibold @(i == Model.PageIndex ? "bg-primary text-white" : "text-gray-900 hover:bg-gray-100") rounded-lg focus:outline-none">
                    @i
                </a>
            }
        </div>
    </div>
}

@if (canManage)
{
    <!-- Create/Edit Modal -->
    <div id="crud-modal" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 items-center justify-center hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
        <div class="relative w-full max-w-md max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow">
                <!-- Modal header -->
                <div class="flex items-center justify-between p-4 border-b rounded-t">
                    <h3 id="modal-title" class="text-lg font-semibold text-gray-900"></h3>
                    <button type="button" onclick="closeModal()" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                        </svg>
                        <span class="sr-only">Đóng</span>
                    </button>
                </div>
                <!-- Modal body -->
                <form id="crud-form" class="p-4 md:p-5">
                    <input type="hidden" id="taichinh-id" />
                    <div class="grid gap-4 mb-4">
                        <div class="col-span-2">
                            <label for="loaigiaodich" class="block mb-2 text-sm font-medium text-gray-900">Loại giao dịch</label>
                            <select name="loaigiaodich" id="loaigiaodich" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5" required>
                                <option value="1">Thu</option>
                                <option value="2">Chi</option>
                            </select>
                        </div>
                        <div class="col-span-2">
                            <label for="sotien" class="block mb-2 text-sm font-medium text-gray-900">Số tiền</label>
                            <input type="number" name="sotien" id="sotien" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5" required>
                        </div>
                        <div class="col-span-2">
                            <label for="ngaythuchien" class="block mb-2 text-sm font-medium text-gray-900">Ngày thực hiện</label>
                            <input type="datetime-local" name="ngaythuchien" id="ngaythuchien" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5" required>
                        </div>
                        <div class="col-span-2">
                            <label for="nguoidongtienid" class="block mb-2 text-sm font-medium text-gray-900">Người đóng tiền</label>
                            <select name="nguoidongtienid" id="nguoidongtienid" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5">
                                <option value="">Chọn người đóng tiền</option>
                            </select>
                        </div>
                        <div class="col-span-2">
                            <label for="hoatdongid" class="block mb-2 text-sm font-medium text-gray-900">Hoạt động</label>
                            <select name="hoatdongid" id="hoatdongid" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5">
                                <option value="">Chọn hoạt động</option>
                            </select>
                        </div>
                        <div class="col-span-2">
                            <label for="mota" class="block mb-2 text-sm font-medium text-gray-900">Mô tả</label>
                            <input type="text" name="mota" id="mota" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5" required>
                        </div>
                        <div class="col-span-2">
                            <label for="ghichu" class="block mb-2 text-sm font-medium text-gray-900">Ghi chú</label>
                            <textarea name="ghichu" id="ghichu" rows="3" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary focus:border-primary block w-full p-2.5"></textarea>
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <button type="submit" class="text-white inline-flex items-center bg-primary hover:bg-primary/90 focus:ring-4 focus:outline-none focus:ring-primary/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
                            <svg class="mr-1 -ml-1 w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path>
                            </svg>
                            <span id="submit-button-text">Thêm mới</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete Modal -->
    <div id="delete-modal" tabindex="-1" class="fixed top-0 left-0 right-0 z-50 hidden p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full flex items-center justify-center">
        <div class="relative w-full max-w-md max-h-full">
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <button type="button" onclick="closeDeleteModal()" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                    <span class="sr-only">Đóng</span>
                </button>
                <div class="p-6 text-center">
                    <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                    </svg>
                    <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Bạn có chắc chắn muốn xóa giao dịch này không?</h3>
                    <button onclick="confirmDelete()" type="button" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2 dark:bg-red-500 dark:hover:bg-red-600 dark:focus:ring-red-900">
                        Xác nhận
                    </button>
                    <button onclick="closeDeleteModal()" type="button" class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">
                        Hủy
                    </button>
                </div>
            </div>
        </div>
    </div>
}
@{
    var tokenUser = Context.Session.GetString("TokenUser");
}
@section Scripts {
    <script>
        let deleteId = 0;
        const modal = document.getElementById('crud-modal');
        const deleteModal = document.getElementById('delete-modal');
        const form = document.getElementById('crud-form');
        const nguoiDongTienSelect = document.getElementById('nguoidongtienid');
        const hoatDongSelect = document.getElementById('hoatdongid');

        // Load danh sách người dùng khi trang được tải
        async function loadNguoiDung() {
            try {
                const response = await fetch('http://localhost:5032/api/NguoiDung?PageSize=100', {
                    headers: {
                        'Authorization': `Bearer @tokenUser`,
                        'Accept': 'application/json'
                    }
                });
                const result = await response.json();
                
                if (result.success) {
                    nguoiDongTienSelect.innerHTML = '<option value="">Chọn người đóng tiền</option>';
                    result.data.items.forEach(user => {
                        const option = document.createElement('option');
                        option.value = user.id;
                        option.textContent = user.hoTen;
                        nguoiDongTienSelect.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Error loading nguoi dung:', error);
            }
        }

        // Load danh sách hoạt động khi trang được tải
        async function loadHoatDong() {
            try {
                const response = await fetch('http://localhost:5032/api/HoatDong?PageSize=100', {
                    headers: {
                        'Authorization': `Bearer @tokenUser`,
                        'Accept': 'application/json'
                    }
                });
                const result = await response.json();
                
                if (result.success) {
                    hoatDongSelect.innerHTML = '<option value="">Chọn hoạt động</option>';
                    result.data.items.forEach(activity => {
                        const option = document.createElement('option');
                        option.value = activity.id;
                        option.textContent = activity.tenHoatDong;
                        hoatDongSelect.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Error loading hoat dong:', error);
            }
        }

        // Load danh sách người dùng và hoạt động khi trang được tải
        document.addEventListener('DOMContentLoaded', () => {
            loadNguoiDung();
            loadHoatDong();
            loadThongKe();
        });

        async function loadThongKe() {
            try {
                const response = await fetch('/TaiChinh/ThongKe');
                const result = await response.json();
                if (result.success) {
                    const data = result.data;
                    document.getElementById('tong-thu').textContent = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.tongThu);
                    document.getElementById('tong-chi').textContent = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.tongChi);
                    document.getElementById('so-du').textContent = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(data.soDu);
                }
            } catch (error) {
                console.error('Error loading thong ke:', error);
            }
        }

        function openCreateModal() {
            document.getElementById('modal-title').textContent = 'Thêm giao dịch mới';
            document.getElementById('submit-button-text').textContent = 'Thêm mới';
            document.getElementById('taichinh-id').value = '';
            document.getElementById('ngaythuchien').value = new Date().toISOString().slice(0, 16);
            form.reset();
            modal.classList.remove('hidden');
            modal.classList.add('flex');
        }

        function openEditModal(id, loaiGiaoDich, soTien, ngayThucHien, nguoiDongTienId, hoatDongId, moTa, ghiChu) {
            document.getElementById('modal-title').textContent = 'Cập nhật giao dịch';
            document.getElementById('submit-button-text').textContent = 'Cập nhật';
            document.getElementById('taichinh-id').value = id;
            document.getElementById('loaigiaodich').value = loaiGiaoDich;
            document.getElementById('sotien').value = soTien;
            document.getElementById('ngaythuchien').value = new Date(ngayThucHien).toISOString().slice(0, 16);
            document.getElementById('nguoidongtienid').value = nguoiDongTienId || '';
            document.getElementById('hoatdongid').value = hoatDongId || '';
            document.getElementById('mota').value = moTa;
            document.getElementById('ghichu').value = ghiChu || '';
            modal.classList.remove('hidden');
            modal.classList.add('flex');
        }

        function closeModal() {
            modal.classList.add('hidden');
            modal.classList.remove('flex');
        }

        function deleteTaiChinh(id) {
            deleteId = id;
            deleteModal.classList.remove('hidden');
            deleteModal.classList.add('flex');
        }

        function closeDeleteModal() {
            deleteModal.classList.add('hidden');
            deleteModal.classList.remove('flex');
            deleteId = 0;
        }

        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const id = document.getElementById('taichinh-id').value;
            const data = {
                loaiGiaoDich: parseInt(document.getElementById('loaigiaodich').value),
                soTien: parseFloat(document.getElementById('sotien').value),
                ngayThucHien: document.getElementById('ngaythuchien').value,
                nguoiDongTienId: document.getElementById('nguoidongtienid').value ? parseInt(document.getElementById('nguoidongtienid').value) : null,
                hoatDongId: document.getElementById('hoatdongid').value ? parseInt(document.getElementById('hoatdongid').value) : null,
                moTa: document.getElementById('mota').value,
                ghiChu: document.getElementById('ghichu').value || null
            };

            try {
                const response = await fetch(id ? `/TaiChinh/Update/${id}` : '/TaiChinh/Create', {
                    method: id ? 'PUT' : 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();
                if (result.success) {
                    window.location.reload();
                } else {
                    alert(result.message || 'Có lỗi xảy ra');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Có lỗi xảy ra');
            }
        });

        async function confirmDelete() {
            if (!deleteId) return;

            try {
                const response = await fetch(`/TaiChinh/Delete/${deleteId}`, {
                    method: 'DELETE'
                });

                const result = await response.json();
                if (result.success) {
                    window.location.reload();
                } else {
                    alert(result.message || 'Có lỗi xảy ra');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Có lỗi xảy ra');
            }
        }
    </script>
} 